"use client";
import { useState } from "react";
import Calendar, { CalendarProps } from "react-calendar";
import styles from "./MainPageHeader.module.css";
import "react-calendar/dist/Calendar.css";
import dayjs from "dayjs";
import 'dayjs/locale/uk';

dayjs.locale('uk');

export default function CalendarComponent() {
    const [date, setDate] = useState(() => new Date().toISOString());
    const [isMonthPickerOpen, setIsMonthPickerOpen] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –≤—ã–±–æ—Ä–∞ –º–µ—Å—è—Ü–∞
    const [selectedMonth, setSelectedMonth] = useState(dayjs().month()); // –•—Ä–∞–Ω–∏—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü

    const handleMonthChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
        const newselectedMonth = parseInt(event.target.value, 10);
        setSelectedMonth(newselectedMonth);

        const newDate = new Date(new Date(date).getFullYear(), selectedMonth, 1);
        setDate(newDate.toISOString());

        setIsMonthPickerOpen(false);

        // –ú–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –º–µ—Å—è—Ü, –æ—Å—Ç–∞–≤–ª—è—è —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
        setDate((prevDate) => {
            const currentDay = prevDate ? dayjs(prevDate).date() : 1;
            const newDate = dayjs(prevDate).month(newselectedMonth).date(currentDay);
            return newDate.toISOString(); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É
        });
    };

    const handleDateChange: CalendarProps["onChange"] = (newDate) => {
        if (!newDate || Array.isArray(newDate)) return; // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ null –∏ –º–∞—Å—Å–∏–≤

        setDate(newDate.toISOString()); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
    };

    return (
        <div className={styles.calendar}>
            <button onClick={() => setIsMonthPickerOpen(!isMonthPickerOpen)}>
                üìÖ –í–∏–±—Ä–∞—Ç–∏ –º—ñ—Å—è—Ü—å
            </button>

            {isMonthPickerOpen && (
                <select onChange={handleMonthChange} value={new Date(date).getMonth()}>
                    {Array.from({ length: 12 }, (_, i) => (
                        <option key={i} value={i}>
                            {dayjs().month(i).format("MMMM")}
                        </option>
                    ))}
                </select>
            )}

            <Calendar className="customCalendar"
                onChange={handleDateChange}
                value={new Date(date)} // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ Date –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–¥–∞—á–µ–π –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
                view="month"
                locale="uk"
                navigationLabel={({ date }) => (
                    <span className="custom-calendar-label">
                        {dayjs(date).format("MMMM YYYY")}
                    </span>
                )}
                tileClassName={({ date: calendarDate }) => {
                    const isToday = dayjs(calendarDate).isSame(dayjs(), "day"); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞—Ç–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π
                    const isCurrentMonth = dayjs(calendarDate).month() === selectedMonth; // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –¥–µ–Ω—å –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –º–µ—Å—è—Ü—É
                    const isFirstDayOfMonth = dayjs(calendarDate).date() === 1; // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞—Ç–∞ –ø–µ—Ä–≤—ã–º —á–∏—Å–ª–æ–º –º–µ—Å—è—Ü–∞

                    // –ï—Å–ª–∏ —ç—Ç–æ —Å–µ–≥–æ–¥–Ω—è, –≤—ã–¥–µ–ª—è–µ–º –∑–µ–ª—ë–Ω—ã–º
                    if (isToday) return styles.today;

                    // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞, –Ω–µ –≤—ã–¥–µ–ª—è–µ–º –µ–≥–æ —Å–∏–Ω–∏–º
                    if (isFirstDayOfMonth && isCurrentMonth) return styles.noHighlight;

                    // –ï—Å–ª–∏ –¥–µ–Ω—å –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –º–µ—Å—è—Ü—É, –∑–∞–∫—Ä–∞—à–∏–≤–∞–µ–º —Å–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–º
                    if (!isCurrentMonth) return styles.otherMonthDay;

                    // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
                    return "";
                }}
            />
        </div>
    );
}